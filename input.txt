InterGrid Gateway (IGG)
Checkpointing
OpenNebula e Eucalyptus
Java
QoS; Provisionamento de Recursos
Dados
Suporte para arquitetura híbrida; melhoria de QoS de 32%
Possui baixo QoS considerando apenas nuvens privadas
HySARC
Migração preemptiva
OpenStack
Não informado
Provisionamento de recursos
Processos e Dados
Adequado para computação distribuída heterogênea e computação de alto desempenho
Em certos pontos de execução ocorre sobrecarga no sistema
SkyCDS
Migração de Trabalho
OpenStack
Não informado
Uma nova maneira de comparar opções de armazenamento/entrega da avaliação de riscos
Dados e Processos
Redução de carga; minimização de efeitos colaterais causados por interrupções
Trata-se de um protótipo
DARGOS
Autocura e migração preemptiva
OpenStack
C, JavaScript e Python
Dados
Dados
Arquitetura descentralizada; ativação de decisões de agendamento imediato; suporte para múltiplos consumidores via multicast; suporte para filtragem de dados
Tráfego elevado em comunicação unicast
Protótipo para tratamento automático de anomalias
Replicação, Autocura e Migração Preemptiva
OpenStack
Python
Solução envolvendo inteligência para NFV principalmente
Comunicação, processo, dados, virtualização
Mascaramento automático da falha, evitando interrupções no sistema
Trata-se de um protótipo
Tahoe-LAFS
Replicação
Universal
Python
Recuperação de dados
Dados
Fácil processo de replicação; compatível com grande quantidade de dados
Ausência de cache
SwiftER
Replicação
OpenStack
Python
Melhoria em espaço de armazenamento; mais eficiente que a replicação 'tradicional'
Dados e Comunicação
Utiliza menos espaço de armazenamento
Não recomendada pra grandes sistemas; Voltado para backup secundário
Sistema de armazenamento privado multicamadas
Replicação
OpenStack
Java
Recuperação de arquivos em diferentes camadas
Dados e Comunicação
Não necessita da replicação da IDA, chunks e REST
Pode acarretar em custos elevados de acordo com a camada utilizada para a recuperação de dados
Gluster File System (GFS)
Replicação
OpenStack
C/C++
Baixo uso de CPU; E/S mais rápida
Dados
E/S mais rápidas; descentralizado
Dados de longo prazo utilizam armazenamento de Raid comum
Algoritmo híbrido baseado em MapReduce
Replicação
OpenStack
Não informado
Normalização de sub-árvores
Dados
Maior eficiência e escalabilidade quando comparado com outros sistemas existentes
O grande conjunto de dados prejudica a escalabilidade
Morpho
Replicação
OpenNebula
Java
Melhoria em alocação de recursos e armazenamento de dados
Dados e Virtualização
Redução significativa no tráfego de rede (60% a 70%)
Possui baixa escalabilidade
Dynamic Cost-Aware Re-Replication and Re-balancing Strategy (DCR2S)
Replicação
Universal
Não informado
Recuperação de dados
Dados
Diminuição do custo de replicação
Disponibilidade diminui de acordo com a quantidade de réplicas adicionais a mais do que o adequado
Fuzzy Inference based Reliable Replica Replacement (FIR3)
Replicação
Cloudstack
Java
Substituição do arquivo é efetivamente tratada usando Fuzzy Inference System e consistência efetiva entre réplicas
Dados
Sincronização entre réplicas com menor taxa de erro e taxa de dados faltantes
Custo de replicação e chance de sucesso é proporcional ao tamanho do dado
Medical Image File Accessing System (MIFAS)
Replicação e Autocura
OpenNebula
Não informado
Transferência de dados
Dados
Fácil gerencialmento; baixo custo; fácil compartilhamento para nuvens privadas
Em relação a outros sistemas o MIFAS possui eficiência inferior
Sistema baseado no princípio 80/20
Replicação, migração de trabalho e ressubmissão de tarefa
OpenStack
Java
Prevenção de falhas; melhoria de confiabilidade e disponibilidade em sistemas distribuídos de larga escala
Dados
Redução de manutenção; redução de custos; maior disponibilidade; redução na latência geral do sistema
Recomendado apenas para grandes sistemas
Middleware de nuvem para garantir desempenho e alta disponibilidade de aplicativos soft em tempo real
Replicação, checkpointing, manipulação de exceções definidas pelo usuário
OpenStack e OpenNebula
C++
Otimização de recursos; informações de utilização de compartilhamento de recursos em tempo real
Dados, Virtualização e Processos
Mantém QoS elevado
Não existe garantia de que opere em ambientes de produção
mOSAIC
Replicação e Resgate do Fluxo de Trabalho
OpenNebula e OpenStack
Java
Melhor custo benefício, implementação em nuvens múltiplas, autenticação (prevenção)
Comunicação, Processo e Dados
Pode ser escalado para múltiplas máquinas
A adoção de nuvens em grande escala é dificultada visto que os códigos legados precisam ser reescritos para tirar proveito da elasticidade
Pilot-Data
Replicação e Repetir
Eucalyptus e OpenStack
Não informado
Alocação de recursos
Dados
Compatível com sistemas heterogêneos
A necessidade de cada tarefa puxar dados grandes e remotamente cria um gargalo
ONHelp
Checkpointing, migração de trabalho, manipulação de exceções definidas pelo usuário, migração preemptiva
OpenNebula
Não informado
Trata de forma geral diversas falhas
Processo, Comunicação e Virtualização
Tratamento para diversos tipos de falhas; conta com outras ferramentas para monitoramento de rede, segurança, entre outros
Trata-se de uma versão trial
Sistema de resgate de spot inesperados usando instâncias de spot heterogêneos e excesso de provisão
Checkpointing, migração de trabalho, replicação e resgate do fluxo de trabalho
Amazon EC2
Java
Redução de custo financeiro de recursos em nuvem e garantia de alta disponibilidade
Comunicação, Processo
Lida com resgates de pontos inesperados usando instâncias de pontos heterogêneos e excesso de provisão
Em algumas situações, apesar de ser algo raro, a heterogeneidade em grupos locais pode causar violação da semântica tolerante a falhas
Symbiotic Virtualization (SymVirt)
Replicação, Checkpointing e Repetir
Universal
Fortran
Migração e comunicação entre VMM e SO convidado
Comunicação e Virtualização
Permite hot migration de VM; fácil implementação; API simples; suporte para hot-add
Sobrecarga de saídas das VMs; aumento da latência da comunicação
Mantis
Migração preemptiva
Universal
Ruby e Python
Balanceamento de carga em ambientes com rede ópticas
Comunicação
Interface amigável
Por tratar-se de redes ópticas, pode haver problemas quanto a definição de extensões e parâmetros (camada física)
Fault-Tolerant Stateful Firewall (FT-FW)
Migração preemptiva
Universal
Não informado
Tolerância a falhas para firewalls
Comunicação
Contém um gerenciador de detecção de falhas
Todos os fluxos são recuperados com sucesso, porém, reduz drasticamente o desempenho da rede
Sistema de controle de acesso avançado
Migração preemptiva
OpenStack
Não informado
Provisionamento de reserva antecipada
Comunicação
Redução no tempo de provisionamento; garante provisionamento de forma antecipada e flexível
Sobrecarga por conta da latência do provisionamento
Protótipo para Extração sistemática dos estados de rede
Migração preemptiva
OpenStack
Python
Detecção de inconsistências em configurações de rede
Comunicação
Redução de tempo de análise em L4; grande escopo de detecção de erros
Voltado pra sistemas de baixa carga computacional
pFTree-Ext e pFTree-Wt
Migração preemptiva e migração de trabalho
OpenStack
Não informado
Isolamento pelo pFTree-Ext, distribuição de carga e distribuição de rotas da rede pelo pFTree-Wt
Comunicação e Processo
O pFTree-Wt satisfaz o balanceamento de carga ponderado nos links, mantendo as partições isoladas
Limita o número de partições possíveis na nuvem
Auto healing service framework
Autocura
OpenStack
Python
Uma estrutura de autocura adequada para qualquer aplicativo em nuvem com plugins personalizáveis
Processo e Comunicação
Alarme é disparado com base na capacidade de uso dos discos dos hosts
Incompatibilidade com outras plataformas de nuvem
Mayflies
Replicação
OpenStack
Libvmi(Python e C)
controla as janelas de ataque de exposição dos nós por meio de monitoramento proativo e atualização da VM, referido como reencarnação de nó, em diversas plataformas em intervalos de tempo
Comunicação e Virtualização
Atualização da VM em menos de um minuto
Limita-se a ameaças específicas
TOPSIS
Replicação
OpenStack
Não informado
Seleção da camada ideal para a implantação do vCDN
Comunicação
TOPSIS seleciona a melhor camada (vCDNTTP, vCDNTTH, vCDNTTU ou vCDNATO) em que pode executar o algoritmo de otimização para a migração de nós vCDN
Não foi possível identificar desvantagens
Group-U
Replicação
OpenStack
Não informado
Redução de carga durante o processo de atualização de dados dos nós
Processo e Comunicação
Suporta uma única ou várias atualizações
Grande consumo de tráfego de rede devido à sua abordagem líder em grupo
Dering Over Shared Memory (DORADO)
Replicação
Não informado
Não informado
Replicação automática dos estados da máquina
Processo e Comunicação
Pode replicar, criar ou excluir nós, mantendo um número pré-definido de réplicas em execução
O protocolo do sistema usa um coletor de lixo na memória compartilhada para evitar o crescimento ilimitado dos dados. O protótipo atual não possui tal mecanismo.
COSCAnet-FT
Replicação
Universal
Não informado
Balanceamento de carga na camada de transporte para encaminhamento de conexões TCP corretamente
Comunicação
Suporta um serviço de valor agregado, pois aplicativos OSGi comuns podem ser reproduzidos de forma transparente sob demanda, oferecendo alta disponibilidade
Suporte apenas para TCP
Cloud Inter-operation Toolkit(CIT)
Replicação
Universal
Não descrita pelo autor
Empréstimo de VM
Comunicação, Processo e Virtualização
Economia de recursos, maior confiabilidade em provisionamento de VMs
Compatível apenas com nuvens externas
OpenADN
Replicação
Não informado
Não informado
Disponibilidade
Comunicação
Sobreposição IP
Compatível apenas com UDP
SprintNet
Replicação
OpenNebula
Não informado
Redução de 13%-20% na latência da rede
Comunicação
Baixa perda de pacotes (0,02%)
Arquitetura de rede escalável de baixo diâmetro
Future Automation System Architecture (FASA)
Replicação
Universal
C++ e Java
Problemas de sistemas paralelos de automação
Processo
Suporta a execução de aplicativos de controle em um sistema com um número arbitrário de hosts cujos relógios são sincronizados
Devido a baixos tempos de ciclos, pode haver conflitos com alguns recursos avançados do FASA, como a execução distribuída
Fault Tolerance Manager (FTM)
Checkpointing, repetir, replicação e autocura
Amazon EC2
Não informado
Recuperação automática em caso de falhas em nós
Processo
Permite a implementação de tolerância a falhas em aplicações sem esforço significativo do usuário
Falhas simultâneas do nó vizinho não são suportadas
Fault-tolerance in federated Clouds (FT-FC)
Replicação
Não informado
Não informado
Tolerar falhas bizantinas
Processo
O FT-FC permite a criação de muitas formas diferentes de algoritmos redundantes tolerantes a falhas; trata falhas bizantinas
A configuração de falhas e propagação de falhas nos experimentos é relativamente simplista, com falhas injetadas na camada de aplicação de nuvem, bem como uma taxa fixa de propagação
Promethee Scheduler
Replicação
Amazon EC2
Não informado
Execução de aplicativos Bag-of-Tasks em DCI
Processo
Maximiza a satisfação do usuário expressa de acordo com os critérios de preço, tempo de conclusão esperado e confiança, enquanto maximiza o emprego útil da infraestrutura do ponto de vista do proprietário dos recursos
Necessita que o tamanho da janela esteja acima de um limite
Proposta de arquitetura de cluster virtual tolerante a falhas
Replicação, repetir e migração preemptiva
OpenNebula
Java e JavaScript
Problemas de aplicativos de bag of tasks
Processo e virtualização
Pode ser implantado em ambientes de nuvem de uma ou mais aplicações, com diferentes configurações
Parâmetros de configuração dependem do gestor da nuvem e sua infraestrutura
Cloud-Agnostic Checkpointing Service (CACS)
Checkpointing, migração preemptiva, migração de trabalho e autocura
Universal
Java (Restlet)
Migração de VMs, diminuição de custo de checkpointing
Processo, Comunicação e Virtualização
Compatível com múltiplas nuvens heterogêneas (incluindo migração e cloudification); pontos de verificação distribuída
Aumento de nós aumenta ligeiramente o tempo de execução
Unibus
Checkpointing e repetir
Amazon EC2
Python
Execução tolerante a falhas de aplicativos distribuídos e paralelos
Processo e virtualização
Baixo custo operacional e fácil configuração
O método para tolerar falhas é basicamente o mesmo que outros sistemas já utilizam
Availability Knob
Migração preemptiva e autocura
OpenStack e outras nuvens IaaS
Não identificado
Alocação de VM
Processo e Virtualização
A implantação de AK leva a mais de 10% de redução de custos para provedores e melhora a satisfação do usuário
A integração do AK no OpenStack requer algumas modificações no banco de dados do OpenStack Nova
Protótimo para Sistema de Migração de VM
Migração preemptiva, replicação e autocura
CloudStack
Java
Migração de VM
Processo e Virtualização
Não induz perda significativa de desempenho
Não consegue lidar com um erro de falha de parada
Fault-Tolerant Elastic Scheduling Algortihm for Workflow (FTESW)
Migração de Trabalho
Universal
Não informado
Escalonamento
Processo e virtualização
O mecanismo elástico de provisionamento de recursos do FTESW é capaz de impulsionar a utilização de recursos de forma eficaz
Funciona apenas offline
Sistema de detecção e mitigação de falhas
Migração preemptiva e migração de trabalho
Não informado
Não informado
Detecção e mitigação de falhas com base no estado de execução do trabalho utilizando monitoramento
Processo e Virtualização
Garante que as sobrecargas mínimas do sistema sejam adicionadas e que o QoS afetado seja mínimo
Mesmo que haja uma ou mais falhas de VM, todos os trabalhos ainda são executados com 100% de sucesso na VM nova, com tempo de atraso
Algoritmo de tolerância a falhas energéticas para computação de alto desempenho
Migração preemptiva, migração de trabalho, checkpointing e autocura
Universal
Não informado
Escalonamento e prevenção a falhas
Processo e Virtualização
É capaz de impulsionar a utilização de recursos de forma eficaz
Funciona apenas offline
Zurmo Native
Migração de trabalho e autocura
OpenStack e AWS
Python
Autogerenciamento escalável e resiliente
Processo e Virtualização
Permite a resiliência de ambas as funcionalidades
Para de responder a requisições caso o disco esteja cheio
Proactive Fault Tolerance Mechanism for Data Center Network
Checkpointing
Não informado
Não informado
Realocação de VM
Virtualização
Migração automática de hosts, prever VMs deterioradas
Precisa de ajustes para reduzir consumo de redes e de armazenamento
Replicação de VM para melhorar a capacidade de sobrevivência de aplicativos de missão crítica
Autocura e replicação
OpenStack, Amazon EC2
Python
Replicação de VM em vários níveis com diferentes tipos de clones
Virtualização
Pode desviar ataques usando clones na chamariz
Trata-se de um protótipo
HAStack
Autocura
OpenStack
Python
Suporte para failover e outros modelos de redundância
Virtualização
Compatibilidade e escalabilidade total com o OpenStack
A utilização em nível da instância e em nível de pilha pode causar alguns conflitos com os componentes de Operação do OpenStack
FTStack
Migração Preemptiva
OpenStack
Python
Provisionamento de VEE
Virtualização
Diminui a latência de sobrecarga para solicitações normais
Não suporta todos os serviços do OpenStack